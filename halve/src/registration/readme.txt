配准模块

一、功能
1、缓存CT数据:用户点击工具栏的"选择CT数据"按钮，弹出打开CT数据文件夹对话框，用户选择对应的CT数据文件夹，程序将缓存nii.gz数据到该CT文件夹下。
缓存的nii.gz文件名固定为kNiftiCacheName(nifti_cache.nii.gz).如果已经包含缓存的数据，则不会再次执行缓存数据的逻辑
2、配准:用户点击工具栏的"配准"按钮，程序打开配准界面。配准界面由四部分组成:上方的工具栏，中间左侧的CT模型数据视图，中间右侧的当前激活模型数据视图以及最下方的开始配准按钮。
工具栏包含四个按钮:选择CT数据、开始选点、清除选中点、撤销选点。选择CT数据用于选择CT数据所在的文件夹；开始选点用于在中间左右两侧的模型视图中选点；清除选中点用于清除左右两侧模型视图中
的选中点。撤销选点用于撤销上次选中的配准点
中间的模型视图分为左右两侧，左侧展示的是待匹配的CT数据，右侧展示的是当前激活的模型数据，通过在两侧的模型视图中选点，最终将左右两侧视图中的模型数据配准融合。
开始配准按钮:点击后，将左侧的模型数据配准到右侧数据，然后将两侧的模型数据融合。

二、逻辑
配准界面的实现在RegistrationPage.qml中。配准模块主要由以下几个文件组成:CtDataStorage、RegistrationInteractorStyle、RegistrationProcessor、
RegistrationStage、RegistrationSourceStage、RegistrationTargetStage。
其中RegistrationInteractorStyle主要负责pick，并将pick到的数据发送
给RegistrationStage，RegistrationStage在onPointPicked中获取当前用户在Stage中选中的点，并将选中的点插入到userData->pickedPoints中显示。
RegistrationSourceStage和RegistrationTargetStage是模型数据展示的Stage，从RegistrationStage。二者使用共同的选中逻辑。
CtDataStorage单独负责将CT数据转换为nifti缓存数据，缓存CT数据功能会直接实例化该类，并调用convertCtDataToNifti缓存CT数据。convertCtDataToNifti内部
包含判断nifti文件是否存在的判断逻辑，如果已经存在，则不在继续缓存数据。
RegistrationProcessor是配准融合的处理类，通过调用startRegistration执行配准逻辑。

配准逻辑:
1、校验输入数据。目前只验证了输入和输出点的数量是否一致。后续可能需要限制输入输出点的数量，例如最少四个点
2、通过vtkLandmarkTransform创建sourcePoints到targetPoints的刚体变换。
3、通过vtkAppendPolyData重新组织源数据，只保留visibleStates中为true(显示的segment)。
4、应用第二步得到的刚体变换，将第三步得到的vtkPolyData转换到targetPolyData所在的坐标系下。
5、合并sourcePolyData和targetPolyData。
6、对合并的数据进行重新采样，避免数据中出现孔洞。
7、保存融合后的数据

缓存数据的逻辑:
1、将CT数据转换成nifti数据
2、调用ONNXInference中的onnxModelInference接口，将nifti数据进行分割

